buildscript {
    ext.kotlin_version = '1.6.0-M1'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    //id "com.commercehub.gradle.plugin.avro-base" version "0.7.0"
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
}


apply plugin: 'maven'
apply plugin: 'kotlin'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.avro:avro:1.10.1'
    //implementation "com.commercehub.gradle.plugin:gradle-avro-plugin:0.7.0"
    implementation 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation group: 'org.apache.avro', name: 'avro-tools', version: '1.10.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

test {
    useJUnitPlatform()
}

task renewAvro {
    doLast {
        delete "src/main/java/com/fretron/model"
        copy {
            from "build/avro/com/fretron/model"
            into "src/main/java/com/fretron/model"
        }
    }
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    //point plugin to folder with avro schemas
    source("src/main/java/avro")
    include("*.avsc")
    //point plugin to folder with generated POJOs
    outputDir = file("build/avro")
}
//compileJava.source(generateAvro.outputs)

renewAvro.dependsOn generateAvro
build.dependsOn renewAvro
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

//build.dependsOn generateAvro
